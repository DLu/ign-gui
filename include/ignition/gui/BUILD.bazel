load(
    "//ign_bazel:cmake_configure_file.bzl",
    "cmake_configure_file",
)
load(
    "//ign_bazel:generate_include_header.bzl",
    "generate_include_header",
)
load(
    "//ign_bazel:ign_export_header.bzl",
    "ign_export_header",
)
load(
    "//ign_bazel:qt.bzl",
    "qt_cc_binary",
)

package(default_visibility = ["//visibility:public"])

PROJECT_NAME = "ignition-gui"
PROJECT_MAJOR = 4
PROJECT_MINOR = 0
PROJECT_PATCH = 0
IGN_DESIGNATION = "/tmp"
CMAKE_INSTALL_PREFIX = "/tmp"
IGN_LIB_INSTALL_DIR = "/tmp"
library_location = "/usr"
IGN_LIBRARY_PATH = "/usr"

# Generates config.hh based on the version numbers in CMake code.
cmake_configure_file(
    name = "config",
    src = "config.hh.in",
    out = "config.hh",
    cmakelists = ["CMakeLists.txt"],
    defines = [
        "PROJECT_VERSION_MAJOR=%d" % (PROJECT_MAJOR),
        "PROJECT_MAJOR_VERSION=%d" % (PROJECT_MAJOR),
        "PROJECT_MINOR_VERSION=%d" % (PROJECT_MINOR),
        "PROJECT_PATCH_VERSION=%d" % (PROJECT_PATCH),
        "PROJECT_VERSION_PATCH=%d" % (PROJECT_PATCH),
        "PROJECT_VERSION_MAJOR=%d" % (PROJECT_MAJOR),
        "PROJECT_VERSION_MINOR=%d" % (PROJECT_MINOR),
        "PROJECT_VERSION=%d.%d" % (PROJECT_MAJOR, PROJECT_MINOR),
        "PROJECT_VERSION_FULL=%d.%d.%d" % (PROJECT_MAJOR, PROJECT_MINOR, PROJECT_PATCH),  # noqa
        "PROJECT_NAME_NO_VERSION=%s" % (PROJECT_NAME),
        "PROJECT_NAME=%s" % (PROJECT_NAME),
        "IGN_DESIGNATION=%s" % (IGN_DESIGNATION),
        "CMAKE_INSTALL_PREFIX=%s" % (CMAKE_INSTALL_PREFIX),
        "IGN_LIB_INSTALL_DIR=%s" % (IGN_LIB_INSTALL_DIR),
    ],
    visibility = ["//visibility:public"],
)

ign_export_header(
    name = "Export.hh",
    lib_name = "libignition-gui4",
    export_base = "IGNITION_GUI",
    visibility = ["//visibility:public"],
)

name = "resources"
outfile = "qrc_%s.cpp" % name
qrc_file = "%s.qrc" % name
files = [
    "qtquickcontrols2.conf",
    "qml/IgnCard.qml",
    "qml/IgnCardSettings.qml",
    "qml/IgnHelpers.qml",
    "qml/IgnRulers.qml",
    "qml/IgnSpinBox.qml",
    "qml/IgnSplit.qml",
    "qml/Main.qml",
    "qml/PluginMenu.qml",
    "qml/SideDrawer.qml",
    "qml/StandaloneDialog.qml",
    "qml/StyleDialog.qml",
    "qml/images/drawer.png",
    "qml/images/ignition_logo_50x50.png",
    "qml/images/menu.png",
]
genrule(
    name = name + "_gen",
    srcs = [qrc_file] + files,
    outs = [outfile],
    cmd = "cd ign_gui/include/ignition/gui && rcc --name name --output %s %s && cp %s ../../../../$(OUTS)" % (outfile, qrc_file, outfile),
)
cc_library(
    name = name,
    srcs = [outfile],
    alwayslink = 1,
    visibility = ["//visibility:public"],
)

exports_files([
    "Application.hh",
    "Conversions.hh",
    "Dialog.hh",
    "DragDropModel.hh",
    "Enums.hh",
    "GuiEvents.hh",
    "Helpers.hh",
    "ign.hh",
    "MainWindow.hh",
    "Plugin.hh",
    "SearchModel.hh",
    "qt.h",
    "qtquickcontrols2.conf",
    "qml/IgnCard.qml",
    "qml/IgnCardSettings.qml",
    "qml/IgnHelpers.qml",
    "qml/IgnRulers.qml",
    "qml/IgnSpinBox.qml",
    "qml/IgnSplit.qml",
    "qml/Main.qml",
    "qml/PluginMenu.qml",
    "qml/SideDrawer.qml",
    "qml/StandaloneDialog.qml",
    "qml/StyleDialog.qml",
    "qml/images/drawer.png",
    "qml/images/ignition_logo_50x50.png",
    "qml/images/menu.png",
])
