load(
    "//ign_bazel:cmake_configure_file.bzl",
    "cmake_configure_file",
)
load(
    "//ign_bazel:generate_include_header.bzl",
    "generate_include_header",
)
load(
    "//ign_bazel:ign_export_header.bzl",
    "ign_export_header",
)
load(
    "//ign_bazel:generate_yaml.bzl",
    "generate_yaml",
)
load(
    "@bazelruby_rules_ruby//ruby:defs.bzl",
    "ruby_binary",
    "ruby_library",
    "ruby_test",
    "ruby_rspec",
)

package(default_visibility = ["//visibility:public"])

PROJECT_NAME = "ignition-gui"
PROJECT_MAJOR = 4
PROJECT_MINOR = 0
PROJECT_PATCH = 0
IGN_DESIGNATION = "/tmp"
CMAKE_INSTALL_PREFIX = "/tmp"
IGN_LIB_INSTALL_DIR = "/tmp"
library_location = "/usr"
IGN_LIBRARY_PATH = "/usr"

# Generates config.hh based on the version numbers in CMake code.
cmake_configure_file(
    name = "config",
    src = "include/ignition/gui/config.hh.in",
    out = "include/ignition/gui/config.hh",
    cmakelists = ["CMakeLists.txt"],
    defines = [
        "PROJECT_VERSION_MAJOR=%d" % (PROJECT_MAJOR),
        "PROJECT_MAJOR_VERSION=%d" % (PROJECT_MAJOR),
        "PROJECT_MINOR_VERSION=%d" % (PROJECT_MINOR),
        "PROJECT_PATCH_VERSION=%d" % (PROJECT_PATCH),
        "PROJECT_VERSION_PATCH=%d" % (PROJECT_PATCH),
        "PROJECT_VERSION_MAJOR=%d" % (PROJECT_MAJOR),
        "PROJECT_VERSION_MINOR=%d" % (PROJECT_MINOR),
        "PROJECT_VERSION=%d.%d" % (PROJECT_MAJOR, PROJECT_MINOR),
        "PROJECT_VERSION_FULL=%d.%d.%d" % (PROJECT_MAJOR, PROJECT_MINOR, PROJECT_PATCH),  # noqa
        "PROJECT_NAME_NO_VERSION=%s" % (PROJECT_NAME),
        "PROJECT_NAME=%s" % (PROJECT_NAME),
        "IGN_DESIGNATION=%s" % (IGN_DESIGNATION),
        "CMAKE_INSTALL_PREFIX=%s" % (CMAKE_INSTALL_PREFIX),
        "IGN_LIB_INSTALL_DIR=%s" % (IGN_LIB_INSTALL_DIR),
    ],
    visibility = ["//visibility:private"],
)

ign_export_header(
    name = "include/ignition/gui/Export.hh",
    lib_name = "ignition-gui",
    export_base = "IGNITION_GUI",
    visibility = ["//visibility:private"],
)

public_headers_no_gen = [
    "include/ignition/gui/Application.hh",
    "include/ignition/gui/Conversions.hh",
    "include/ignition/gui/Dialog.hh",
    "include/ignition/gui/DragDropModel.hh",
    "include/ignition/gui/Enums.hh",
    "include/ignition/gui/GuiEvents.hh",
    "include/ignition/gui/Helpers.hh",
    "include/ignition/gui/ign.hh",
    "include/ignition/gui/MainWindow.hh",
    "include/ignition/gui/Plugin.hh",
    "include/ignition/gui/SearchModel.hh",
    "include/ignition/gui/qt.h",
]

sources = [
    "src/Application.cc",
    "src/Conversions.cc",
    "src/Dialog.cc",
    "src/DragDropModel.cc",
    "src/Helpers.cc",
    "src/ign.cc",
    "src/MainWindow.cc",
    "src/Plugin.cc",
    "src/SearchModel.cc",
]

test_sources = [
    "src/Application_TEST.cc",
    "src/Conversions_TEST.cc",
    "src/DragDropModel_TEST.cc",
    "src/Helpers_TEST.cc",
    # "src/ign_TEST.cc",
    "src/MainWindow_TEST.cc",
    "src/Plugin_TEST.cc",
    "src/SearchModel_TEST.cc",
]

generate_include_header(
    name = "guihh_genrule",
    out = "include/ignition/gui.hh",
    hdrs = public_headers_no_gen + [
        "include/ignition/gui/config.hh",
        "include/ignition/gui/Export.hh",
    ],
)

public_headers = public_headers_no_gen + [
    "include/ignition/gui/config.hh",
    "include/ignition/gui/Export.hh",
    "include/ignition/gui.hh",
]

cc_binary(
    name = "libignition-gui4.so",
    srcs = sources + public_headers,
    includes = ["include"],
    linkopts = [
        "-Wl,-soname,libignition-gui4.so",
        "-ltinyxml2",
        "-lQt5Core",
        "-lQt5Quick",
        "-lQt5QuickControls2",
        "-lQt5Gui",
        "-lQt5Qml",
        "-lQt5Network",
        "-lQt5Widgets",
    ],
    linkshared = True,
    visibility = [],
    copts = [
        "-Iexternal/qtcore",
        "-Iexternal/qtqml",
        "-Iexternal/qtquick",
        "-Iexternal/qtquickcontrols2",
        "-Iexternal/qtwidgets",
        "-Iexternal/qtgui",
        "-Iexternal/qt",
    ],
    deps = [
        "//ign_common/events:events",
        "//ign_common",
        "//ign_math",
        "//ign_msgs",
        "//ign_bazel:utilities",
        "//ign_plugin/loader:loader",
        "//ign_plugin/core:ign_plugin",
        "@qt//:headers",
        "@qtcore//:headers",
        "@qtgui//:headers",
        "@qtqml//:headers",
        "@qtquick//:headers",
        "@qtquickcontrols2//:headers",
        "@qtwidgets//:headers",
    ],
)
'''
   "-Iexternal/qt/QtCore",
   "-Iexternal/qt/QtGui",
   "-Iexternal/qt/QtQml",
   "-Iexternal/qt/QtQuick",
   "-Iexternal/qt/QtQuickControls2",
   "-Iexternal/qt/QtWidgets",
        "-lQt5Core",
        "-lQt5Quick",
        "-lQt5QuickControls2",
        "-lQt5Gui",
        "-lQt5Qml",
        "-lQt5Network",
        "-lQt5Widgets",
'''
cc_library(
    name = "ign_gui",
    srcs = ["libignition-gui4.so"],
    hdrs = public_headers,
    includes = ["include"],
    visibility = ["//visibility:public"],
    linkopts = [
        "-Wl,-soname,libignition4-gui.so",
        "-ltinyxml2",
        "-lQt5Core",
        "-lQt5Quick",
        "-lQt5QuickControls2",
        "-lQt5Gui",
        "-lQt5Qml",
        "-lQt5Network",
        "-lQt5Widgets",
    ],
    copts = [
        "-Iexternal/qtcore",
        "-Iexternal/qtwidgets",
        "-Iexternal/qtgui",
        "-Iexternal/qt",
        "-Iexternal/qtqml",
        "-Iexternal/qtquick",
        "-Iexternal/qtquickcontrols2",
    ],
    deps = [
        "//ign_common/events:events",
        "//ign_common",
        "//ign_math",
        "//ign_msgs",
        "//ign_bazel:utilities",
        "//ign_plugin/loader:loader",
        "//ign_plugin/core:ign_plugin",
        "@qtcore//:headers",
        "@qtgui//:headers",
        "@qt//:headers",
        "@qtqml//:headers",
        "@qtquick//:headers",
        "@qtquickcontrols2//:headers",
        "@qtwidgets//:headers",
    ],
)
[cc_test(
    name = src.replace("/", "_").replace(".cc", "").replace("src_", ""),
    srcs = [src],
    linkopts = [
        "-Wl,-soname,libignition4-gui.so",
        "-ltinyxml2",
        "-lQt5Core",
        "-lQt5Quick",
        "-lQt5QuickControls2",
        "-lQt5Gui",
        "-lQt5Qml",
        "-lQt5Network",
        "-lQt5Widgets",
    ],
    copts = [
        "-Iexternal/qtcore",
        "-Iexternal/qtwidgets",
        "-Iexternal/qtgui",
        "-Iexternal/qt",
        "-Iexternal/qtqml",
        "-Iexternal/qtquick",
        "-Iexternal/qtquickcontrols2",
    ],
    deps = [
        "//ign_math",
        "//ign_msgs",
        "//ign_common",
        "//ign_common/events:events",
        "//ign_gui/test:test_utils",
        "//ign_gui",
        "@gtest//:gtest",
        "@gtest//:gtest_main",
        "@qt//:headers",
        "@qtgui//:headers",
        "@qtcore//:headers",
        "@qtqml//:headers",
        "@qtquick//:headers",
        "@qtquickcontrols2//:headers",
        "@qtwidgets//:headers",
    ],
) for src in test_sources]

exports_files(["src/cmd/cmdgui.rb.in"])
