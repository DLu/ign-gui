load(
    "//ign_bazel:cmake_configure_file.bzl",
    "cmake_configure_file",
)
load(
    "//ign_bazel:generate_include_header.bzl",
    "generate_include_header",
)
load(
    "//ign_bazel:ign_export_header.bzl",
    "ign_export_header",
)
load(
    "//ign_bazel:generate_yaml.bzl",
    "generate_yaml",
)
load(
    "//ign_bazel:qt.bzl",
    "qt_cc_binary",
)

package(default_visibility = ["//visibility:public"])

public_headers_no_gen = [
    "//ign_gui/include/ignition/gui:Application.hh",
    "//ign_gui/include/ignition/gui:Conversions.hh",
    "//ign_gui/include/ignition/gui:Dialog.hh",
    "//ign_gui/include/ignition/gui:DragDropModel.hh",
    "//ign_gui/include/ignition/gui:Enums.hh",
    "//ign_gui/include/ignition/gui:GuiEvents.hh",
    "//ign_gui/include/ignition/gui:Helpers.hh",
    "//ign_gui/include/ignition/gui:ign.hh",
    "//ign_gui/include/ignition/gui:MainWindow.hh",
    "//ign_gui/include/ignition/gui:Plugin.hh",
    "//ign_gui/include/ignition/gui:SearchModel.hh",
    "//ign_gui/include/ignition/gui:qt.h",
]

sources = [
    "src/Application.cc",
    "src/Conversions.cc",
    "src/Dialog.cc",
    "src/DragDropModel.cc",
    "src/Helpers.cc",
    "src/ign.cc",
    "src/MainWindow.cc",
    "src/Plugin.cc",
    "src/SearchModel.cc",
]

test_sources = [
    "src/Application_TEST.cc",
    "src/Conversions_TEST.cc",
    "src/DragDropModel_TEST.cc",
    "src/Helpers_TEST.cc",
    # "src/ign_TEST.cc",
    "src/MainWindow_TEST.cc",
    "src/Plugin_TEST.cc",
    "src/SearchModel_TEST.cc",
]

generate_include_header(
    name = "guihh_genrule",
    out = "include/ignition/gui.hh",
    hdrs = public_headers_no_gen + [
        "//ign_gui/include/ignition/gui:config",
        "//ign_gui/include/ignition/gui:Export.hh",
    ],
)

public_headers = public_headers_no_gen + [
    "//ign_gui/include/ignition/gui:config",
    "//ign_gui/include/ignition/gui:Export.hh",
    "include/ignition/gui.hh",
]
resource_files = [
        "//ign_gui/include/ignition/gui:qtquickcontrols2.conf",
        "//ign_gui/include/ignition/gui:qml/IgnCard.qml",
        "//ign_gui/include/ignition/gui:qml/IgnCardSettings.qml",
        "//ign_gui/include/ignition/gui:qml/IgnHelpers.qml",
        "//ign_gui/include/ignition/gui:qml/IgnRulers.qml",
        "//ign_gui/include/ignition/gui:qml/IgnSpinBox.qml",
        "//ign_gui/include/ignition/gui:qml/IgnSplit.qml",
        "//ign_gui/include/ignition/gui:qml/Main.qml",
        "//ign_gui/include/ignition/gui:qml/PluginMenu.qml",
        "//ign_gui/include/ignition/gui:qml/SideDrawer.qml",
        "//ign_gui/include/ignition/gui:qml/StandaloneDialog.qml",
        "//ign_gui/include/ignition/gui:qml/StyleDialog.qml",
        "//ign_gui/include/ignition/gui:qml/images/drawer.png",
        "//ign_gui/include/ignition/gui:qml/images/ignition_logo_50x50.png",
        "//ign_gui/include/ignition/gui:qml/images/menu.png",
]

qt_cc_binary(
    name = "libignition-gui4.so",
    srcs = sources,
    hdrs = public_headers,
    linkopts = [
        "-Wl,-soname,libignition-gui4.so",
        "-ltinyxml2",
        "-lX11",
        "-lXext",
        "-lXrandr",
        "-lXaw",
        "-lXt",
    ],
    includes = ["include"],
    linkshared = True,
    visibility = [],
    deps = [
        "//ign_common/events",
        "//ign_common",
        "//ign_math",
        "//ign_msgs",
        "//ign_bazel:utilities",
        "//ign_plugin/loader",
        "//ign_plugin/core:ign_plugin",
        "//ign_gui/include/ignition/gui:resources",
        "@qt//:qt_core",
        "@qt//:qt_network",
        "@qt//:qt_widgets",
        "@qt//:qt_quick_control",
        "@qt//:qt_quick",
        "@qt//:qt_qml",
        "@qt//:qt_gui",
        "@qt//:qt_opengl",
    ],
    defines = [
        "IGN_GUI_PLUGIN_PATH='\"ign_gui/src/plugins/\"'",
    ],
)

cc_library(
    name = "ign_gui",
    srcs = ["libignition-gui4.so"],
    hdrs = public_headers,
    includes = ["include"],
    visibility = ["//visibility:public"],
    deps = [
        "//ign_common/events:events",
        "//ign_common",
        "//ign_math",
        "//ign_msgs",
        "//ign_bazel:utilities",
        "//ign_plugin/loader:loader",
        "//ign_plugin/core:ign_plugin",
        "@qt//:qt_core",
        "@qt//:qt_network",
        "@qt//:qt_widgets",
        "@qt//:qt_quick_control",
        "@qt//:qt_quick",
        "@qt//:qt_qml",
        "@qt//:qt_gui",
        "@qt//:qt_opengl",
    ],
    defines = select({
       "//ign_transport:custom": ["HAVE_IFADDRS"],
       "//conditions:default": []
    }),
)

[cc_test(
    name = src.replace("/", "_").replace(".cc", "").replace("src_", ""),
    srcs = [src],
    linkopts = [
        "-ltinyxml2",
        "-lX11",
        "-lXext",
        "-lXrandr",
        "-lXaw",
        "-lXt",
    ],
    deps = [
        ":ign_gui",
        "//ign_math",
        "//ign_msgs",
        "//ign_common",
        "//ign_common/events:events",
        "//ign_gui/test:test_utils",
        "@gtest//:gtest",
        "@gtest//:gtest_main",
        "@qt//:qt_core",
        "@qt//:qt_network",
        "@qt//:qt_widgets",
        "@qt//:qt_quick_control",
        "@qt//:qt_quick",
        "@qt//:qt_qml",
        "@qt//:qt_gui",
        "@qt//:qt_opengl",
    ],
) for src in test_sources]

exports_files(["CMakeLists.txt"])
exports_files(["src/cmd/cmdgui.rb.in"])
